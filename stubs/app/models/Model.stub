<?php

class Model extends Eloquent
{
	/**
	 * Find a model by its primary key or abort.
	 *
	 * @param  mixed  $id
	 * @param  array  $columns
	 * @return \Illuminate\Database\Eloquent\Model|Collection|static
	 */
	public static function findOrFail($id, $columns = array('*'))
	{
		$model = static::find($id);
		if (!$model) {
			$instance = new static;
			$key      = $instance->getKeyName();
			
			if (in_array('Illuminate\Database\Eloquent\SoftDeletingTrait', class_uses($instance))) {
				if (static::onlyTrashed()->where($key, $id)->first()) {
					App::abort(410);
				}
			}
			
			App::abort(404);
		}
		
		return $model;
	}
	
	/**
	 * Customize find method to sort response when passed an array of IDs.
	 *
	 * @param array|int $id
	 * @param array     $columns
	 * 
	 * @return mixed
	 */
	public static function find($id, $columns = array('*'))
	{
		$result = parent::find($id, $columns);
		
		if (!is_array($id)) {
			return $result;
		}
		
		$instance = new static;
		$key      = $instance->getKeyName();
		
		$result->sortBy(function ($model) use ($id, $key) {
			foreach ($id as $idx => $i) {
				if ($model->{$key} == $i) {
					return $idx;
				}
			}
			return 0;
		});
		
		// Call values() to reset the keys on the underlying array
		// since we just sorted it.
		return $result->values();
	}
}
