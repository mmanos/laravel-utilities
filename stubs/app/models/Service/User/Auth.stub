<?php namespace Service\User;

use Event, Str, Config, Hash;

/**
 * The User Auth service.
 */
class Auth
{
	/**
	 * Generate a forgot password token for the given user and return it.
	 *
	 * @param \User $user User model.
	 * 
	 * @return string
	 */
	public static function forgotPassword(\User $user)
	{
		$token = Str::random(20);
		
		$user->auth_reset_token = $token;
		$user->reset_token_expires_at = date(
			'Y-m-d H:i:s',
			time() + Config::get('auth.reset_token_expires', 604800)
		);
		$user->save();
		
		Event::fire('user.auth.forgotPassword', array($user, $token));
		
		return $token;
	}
	
	/**
	 * Look up a user from the given forgot password token.
	 *
	 * @param string $token Reset password token.
	 * 
	 * @return \User|false
	 */
	public static function userFromToken($token)
	{
		$user = \User::where('auth_reset_token', $token)->first();
		
		if (!$user) {
			return false;
		}
		
		if (time() >= strtotime($user->reset_token_expires_at)) {
			return false;
		}
		
		return $user;
	}
	
	/**
	 * Reset the given user's password. Clear any reset tokens.
	 * This method will hash the password.
	 *
	 * @param \User  $user     User model.
	 * @param string $password New password (in plain text).
	 * 
	 * @return void
	 */
	public static function reset(\User $user, $password)
	{
		$user->password = Hash::make($password);
		$user->auth_reset_token = null;
		$user->reset_token_expires_at = null;
		$user->save();
		
		Event::fire('user.auth.reset', array($user, $password));
	}
}
